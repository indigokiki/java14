<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.WorkMapper">
  <resultMap id="BaseResultMap" type="com.cskaoyan.bean.Work">
    <id column="work_id" jdbcType="VARCHAR" property="workId" />
    <result column="process_number" jdbcType="VARCHAR" property="processNumber" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="process_id" jdbcType="VARCHAR" property="processId" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="rating" jdbcType="INTEGER" property="rating" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    work_id, process_number, product_id, process_id, device_id, rating
  </sql>
  <select id="selectByExample" parameterType="com.cskaoyan.bean.WorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work
    where work_id = #{workId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from work
    where work_id = #{workId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cskaoyan.bean.WorkExample">
    delete from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cskaoyan.bean.Work">
    insert into work (work_id, process_number, product_id, 
      process_id, device_id, rating
      )
    values (#{workId,jdbcType=VARCHAR}, #{processNumber,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, 
      #{processId,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, #{rating,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cskaoyan.bean.Work">
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        work_id,
      </if>
      <if test="processNumber != null">
        process_number,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="rating != null">
        rating,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="processNumber != null">
        #{processNumber,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="rating != null">
        #{rating,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cskaoyan.bean.WorkExample" resultType="java.lang.Long">
    select count(*) from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update work
    <set>
      <if test="record.workId != null">
        work_id = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.processNumber != null">
        process_number = #{record.processNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.processId != null">
        process_id = #{record.processId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.rating != null">
        rating = #{record.rating,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update work
    set work_id = #{record.workId,jdbcType=VARCHAR},
      process_number = #{record.processNumber,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=VARCHAR},
      process_id = #{record.processId,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      rating = #{record.rating,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan.bean.Work">
    update work
    <set>
      <if test="processNumber != null">
        process_number = #{processNumber,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="rating != null">
        rating = #{rating,jdbcType=INTEGER},
      </if>
    </set>
    where work_id = #{workId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cskaoyan.bean.Work">
    update work
    set process_number = #{processNumber,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      rating = #{rating,jdbcType=INTEGER}
    where work_id = #{workId,jdbcType=VARCHAR}
  </update>

  <resultMap id="WorkRow" type="com.cskaoyan.bean.schemedprogress.WorkRow">
    <result column="work_id" property="workid"/>
    <result property="processNumber" column="process_number"/>
    <result column="rating" property="rating"/>

    <association property="process" javaType="com.cskaoyan.bean.technology.Process">
      <id column="process_id"  property="processId" />
      <result column="technology_plan_id"  property="technologyPlanId" />
      <result column="sequence" property="sequence" />
      <result column="quota" property="quota" />
    </association>

    <association property="device" javaType="com.cskaoyan.bean.Device">
      <id column="device_id"  property="deviceId" />
      <result column="device_name"  property="deviceName" />
      <result column="device_type_id"  property="deviceTypeId" />
      <result column="device_status_id"  property="deviceStatusId" />
      <result column="device_status"  property="deviceStatus" />
      <result column="device_purchase_date" property="devicePurchaseDate" />
      <result column="device_purchase_price"  property="devicePurchasePrice" />
      <result column="device_manufacture_date"  property="deviceManufactureDate" />
      <result column="device_service_life"  property="deviceServiceLife" />
      <result column="device_keeper_id"  property="deviceKeeperId" />
      <result column="note"  property="note" />
    </association>

    <association property="product" javaType="com.cskaoyan.bean.Product">
      <id column="product_id"  property="productId" />
      <result column="product_name"  property="productName" />
      <result column="product_type"  property="productType" />
      <result column="image"  property="image" />
      <result column="note"  property="note" />
      <result column="status"  property="status" />
    </association>


  </resultMap>

  <select id="getAllWorkByPage" resultMap="WorkRow">
    select w.work_id,w.process_number,w.rating,p.*,d.*,t.product_id,t.product_name,t.product_type,t.image,t.note,t.status
    from work w left join process p on w.process_id = p.process_id
                left join device d on w.device_id = d.device_id
                left join product t on w.product_id = t.product_id
  </select>

  <select id="getCountWork" resultType="_int">
    select count(*)
    from work w left join process p on w.process_id = p.process_id
                left join device d on w.device_id = d.device_id
                left join product t on w.product_id = t.product_id
  </select>
</mapper>