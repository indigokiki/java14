<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.material.MaterialConsumeMapper">

  <resultMap id="materialConsumes" type="com.cskaoyan.bean.material.MaterialConsumes">
    <result property="consumeId" column="consume_id"/>
    <result property="consumeAmount" column="consume_amount"/>
    <result property="consumeDate" column="consume_date"/>
    <result property="sender" column="sender"/>
    <result property="receiver" column="receiver"/>
    <result property="note" column="note"/>

    <association property="work" javaType="com.cskaoyan.bean.Work">
      <result property="workId" column="work_id"/>
      <result property="processNumber" column="process_number"/>
      <result property="productId" column="product_id"/>
      <result property="processId" column="process_id"/>
      <result property="deviceId" column="device_id"/>
      <result property="rating" column="rating"/>
    </association>

    <association property="material" javaType="com.cskaoyan.bean.material.Material">
      <result property="materialId" column="material_id"/>
      <result property="materialType" column="material_type"/>
      <result property="status" column="status"/>
      <result property="remaining" column="remaining"/>
      <result property="note" column="note"/>
    </association>
  </resultMap>

  <select id="allMaterialConsumes" resultMap="materialConsumes" >

select c.consume_id,c.consume_amount,c.consume_date,c.receiver,c.sender,c.note,
m.material_id,m.material_type,m.remaining,m.`status`,m.note,
w.work_id,w.device_id,w.process_id,w.process_number,w.rating
from material_consume c left join  material m on
c.material_id = m.material_id left join work w on
c.work_id = w.work_id
  </select>

  <select id="searchMaterialReceiveByConsumeId" resultMap="materialConsumes">
select c.consume_id,c.consume_amount,c.consume_date,c.receiver,c.sender,c.note,
m.material_id,m.material_type,m.remaining,m.`status`,m.note,
w.work_id,w.device_id,w.process_id,w.process_number,w.rating
from material_consume c left join  material m on
c.material_id = m.material_id left join work w on
c.work_id = w.work_id
where c.consume_id like #{searchValue}
  </select>

  <select id="searchMaterialConsumeByMaterialId" resultMap="materialConsumes">
select c.consume_id,c.consume_amount,c.consume_date,c.receiver,c.sender,c.note,
m.material_id,m.material_type,m.remaining,m.`status`,m.note,
w.work_id,w.device_id,w.process_id,w.process_number,w.rating
from material_consume c left join  material m on
c.material_id = m.material_id left join work w on
c.work_id = w.work_id
where m.material_id like #{searchValue}
  </select>

  <select id="searchMaterialConsumeByWorkId" resultMap="materialConsumes">
select c.consume_id,c.consume_amount,c.consume_date,c.receiver,c.sender,c.note,
m.material_id,m.material_type,m.remaining,m.`status`,m.note,
w.work_id,w.device_id,w.process_id,w.process_number,w.rating
from material_consume c left join  material m on
c.material_id = m.material_id left join work w on
c.work_id = w.work_id
where w.work_id like #{searchValue}
  </select>


  <resultMap id="BaseResultMap" type="com.cskaoyan.bean.material.MaterialConsume">
    <id column="consume_id" jdbcType="VARCHAR" property="consumeId" />
    <result column="work_id" jdbcType="VARCHAR" property="workId" />
    <result column="material_id" jdbcType="VARCHAR" property="materialId" />
    <result column="consume_amount" jdbcType="INTEGER" property="consumeAmount" />
    <result column="consume_date" jdbcType="TIMESTAMP" property="consumeDate" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    consume_id, work_id, material_id, consume_amount, consume_date, sender, receiver, 
    note
  </sql>
  <select id="selectByExample" parameterType="com.cskaoyan.bean.material.MaterialConsumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from material_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from material_consume
    where consume_id = #{consumeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from material_consume
    where consume_id = #{consumeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cskaoyan.bean.material.MaterialConsumeExample">
    delete from material_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cskaoyan.bean.material.MaterialConsume">
    insert into material_consume (consume_id, work_id, material_id, 
      consume_amount, consume_date, sender, 
      receiver, note)
    values (#{consumeId,jdbcType=VARCHAR}, #{workId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, 
      #{consumeAmount,jdbcType=INTEGER}, #{consumeDate,jdbcType=TIMESTAMP}, #{sender,jdbcType=VARCHAR}, 
      #{receiver,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cskaoyan.bean.material.MaterialConsume">
    insert into material_consume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="consumeId != null">
        consume_id,
      </if>
      <if test="workId != null">
        work_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="consumeAmount != null">
        consume_amount,
      </if>
      <if test="consumeDate != null">
        consume_date,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="consumeId != null">
        #{consumeId,jdbcType=VARCHAR},
      </if>
      <if test="workId != null">
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="consumeAmount != null">
        #{consumeAmount,jdbcType=INTEGER},
      </if>
      <if test="consumeDate != null">
        #{consumeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cskaoyan.bean.material.MaterialConsumeExample" resultType="java.lang.Long">
    select count(*) from material_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update material_consume
    <set>
      <if test="record.consumeId != null">
        consume_id = #{record.consumeId,jdbcType=VARCHAR},
      </if>
      <if test="record.workId != null">
        work_id = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialId != null">
        material_id = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeAmount != null">
        consume_amount = #{record.consumeAmount,jdbcType=INTEGER},
      </if>
      <if test="record.consumeDate != null">
        consume_date = #{record.consumeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sender != null">
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null">
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update material_consume
    set consume_id = #{record.consumeId,jdbcType=VARCHAR},
      work_id = #{record.workId,jdbcType=VARCHAR},
      material_id = #{record.materialId,jdbcType=VARCHAR},
      consume_amount = #{record.consumeAmount,jdbcType=INTEGER},
      consume_date = #{record.consumeDate,jdbcType=TIMESTAMP},
      sender = #{record.sender,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan.bean.material.MaterialConsume">
    update material_consume
    <set>
      <if test="workId != null">
        work_id = #{workId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null">
        material_id = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="consumeAmount != null">
        consume_amount = #{consumeAmount,jdbcType=INTEGER},
      </if>
      <if test="consumeDate != null">
        consume_date = #{consumeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null">
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where consume_id = #{consumeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cskaoyan.bean.material.MaterialConsume">
    update material_consume
    set work_id = #{workId,jdbcType=VARCHAR},
      material_id = #{materialId,jdbcType=VARCHAR},
      consume_amount = #{consumeAmount,jdbcType=INTEGER},
      consume_date = #{consumeDate,jdbcType=TIMESTAMP},
      sender = #{sender,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where consume_id = #{consumeId,jdbcType=VARCHAR}
  </update>
</mapper>